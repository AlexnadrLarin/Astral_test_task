services:
  docs_storage_service:
    build:
      dockerfile: ./build/Dockerfile
    container_name: docs_storage_service_container
    environment:
     - SERVER_HOST=${SERVER_HOST}
     - SERVER_PORT=${SERVER_PORT}
     - SERVER_SHUTDOWN_TIMEOUT=${SERVER_SHUTDOWN_TIMEOUT}
     - POSTGRES_HOST=${POSTGRES_HOST}
     - POSTGRES_PORT=${POSTGRES_PORT}
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     - POSTGRES_DB=${POSTGRES_DB}
     - POSTGRES_SSL_MODE=${POSTGRES_SSL_MODE}
     - ADMIN_TOKEN=${ADMIN_TOKEN}
    networks:
      - backend_network
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    restart: unless-stopped
    depends_on:
      postgres_db:
        condition: service_healthy
    volumes:
      - ./database/uploads:/app/files

  postgres_db:
    build:
      context: ./database/postgres
    container_name: postgres_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend_network
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
  
networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data: